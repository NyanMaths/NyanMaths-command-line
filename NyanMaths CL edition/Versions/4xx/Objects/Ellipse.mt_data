class Ellipse:
    __type__ = "Ellipse"
    
    def __init__ (self, a, b = None):
        if b is None:
            b = a

        if _isRealLimit (a) and _isRealLimit (b):
            self._a = a
            self._b = b

        else:
            print ("\n Invalid values : they must be positive non-zero real numbers !\n Initialization of default values...\n Done\n")
            self._a = 1
            self._b = 1


    def _getA (self):
        return self._a

    def _getB (self):
        return self._b

    def _getRadius (self):
        if self._a == self._b:
            return self._a

        print ("\n You can't access to this attribute !\n")
        raise RuntimeError

    def _getPerimeter (self):
        return 2 * pi * ((self._a * self._a + self._b * self._b) / 2)**0.5

    def _getSurface (self):
        return self._a * self._b * pi


    def _setA (self, nA):
        if _isRealLimit (nA):
            self._a = nA
            
        else:
            BSOD ()

    def _setB (self, nB):
        if _isRealLimit (nB):
            self._b = nB
            
        else:
            print ("\n Invalid new value : it must be a positive non-zero real number !\n")

    def _setRadius (self, nRadius):
        if _isRealLimit (nRadius):
            self._a = nRadius
            self._b = nRadius
            
        else:
            print ("\n Invalid new radius : it must be a positive non-zero real number !\n")
    
    def _setPerimeter (self, nPerimeter):
        print ("\n You are not allowed to do it !\n")

    def _setSurface (self, nSurface):
        print ("\n You are not allowed to do it !\n")


    def __getattr__ (self, name):
        print ("\n There is no attribute named {} in this object !\n".format (name))
                
    def __repr__ (self):
        print ("\n Loading resources...")
        system ('Graphics.pyw ellipse {4} {0} {1} {2} {3}'.format (self.a, self.b, self.perimeter, self.surface, _precision_))
        return ''


    def __imul__ (self, n):
        if _isRealLimit (n):
            self._a *= n
            self._b *= n

        else:
            print ("\n Invalid coefficient : it must be a positive non-zero real number !\n")

        return self

    def __itruediv__ (self, n):
        if _isRealLimit (n):
            self._a /= n
            self._b /= n

        else:
            print ("\n Invalid coefficient : it must be a positive non-zero real number !\n")

        return self

    def __mul__ (self, n):
        if _isRealLimit (n):
            return Ellipse (self._a * n, self._b * n)

        print ("\n Invalid coefficient : it must be a positive non-zero real number !\n")

    def __truediv__ (self, n):
        if _isRealLimit (n):
            return Ellipse (self._a / n, self._b / n)

        print ("\n Invalid coefficient : it must be a positive non-zero real number !\n")

    def __rmul__ (self, n):
        return self * n


    def __eq__ (self, n):
        if type (n) is Ellipse:
            return self.a == n.a and self.b == n.b

        print ("\n Invalid operand type : they must be two ellipses !\n")

    def __ne__ (self, n):
        if type (n) is Ellipse:
            return self.a != n.a or self.b != n.b

        print ("\n Invalid operand type : they must be two ellipses !\n")


    a = property (_getA, _setA)
    b = property (_getB, _setB)
    radius = property (_getRadius, _setRadius)
    perimeter = property (_getPerimeter, _setPerimeter)
    surface = property (_getSurface, _setSurface)